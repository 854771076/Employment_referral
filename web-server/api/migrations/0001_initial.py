# Generated by Django 3.2.5 on 2023-11-14 10:57

import api.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='company',
            fields=[
                ('companyid', models.CharField(max_length=255)),
                ('rootcompanynumber', models.CharField(max_length=255, null=True)),
                ('companynumber', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('companyscaletypetagsnew', models.CharField(max_length=255, null=True, verbose_name='标签')),
                ('companyname', models.CharField(max_length=255, null=True)),
                ('companylogo', models.TextField(null=True)),
                ('industryCompanyTags', models.CharField(max_length=255, null=True)),
                ('propertycode', models.CharField(max_length=255, null=True)),
                ('property', models.CharField(max_length=255, null=True)),
                ('industryName', models.CharField(max_length=255, null=True)),
                ('companysize', models.CharField(max_length=255, null=True)),
                ('companyurl', models.TextField(null=True)),
                ('job_num', models.IntegerField(default=0, null=True)),
            ],
            options={
                'verbose_name': '企业基本信息',
                'verbose_name_plural': '企业基本信息',
                'db_table': 'company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='hotjobs_TOP20',
            fields=[
                ('job_id', models.IntegerField(primary_key=True, serialize=False)),
                ('weight', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name': '职位热门列表',
                'db_table': 'hotjobs_top20',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recommendforallusers',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('recommendations', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '用户推荐列表',
                'db_table': 'recommendforallusers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=10, null=True, verbose_name='姓名')),
                ('birth', models.DateField(null=True, verbose_name='生日')),
                ('genderCode', models.IntegerField(default='1', null=True, verbose_name='性别id 男 1 女 0')),
                ('genderTranslation', models.CharField(default='男', max_length=2, null=True, verbose_name='性别')),
                ('currentIdentity', models.CharField(max_length=10, null=True, verbose_name='求职者身份 0在校 1应届 2社会')),
                ('currentCity', models.IntegerField(null=True, verbose_name='城市id')),
                ('currentCityTranslation', models.CharField(max_length=20, null=True, verbose_name='城市')),
                ('currentCityDistrictId', models.IntegerField(null=True, verbose_name='区域id')),
                ('currentCityDistrictIdTranslation', models.CharField(max_length=20, null=True, verbose_name='区域')),
                ('currentProvince', models.IntegerField(null=True, verbose_name='省id')),
                ('currentProvinceTranslation', models.CharField(max_length=10, null=True, verbose_name='省')),
                ('politicalAffiliation', models.CharField(max_length=10, null=True, verbose_name='政治面貌')),
                ('phone', models.CharField(max_length=11, verbose_name='手机号')),
                ('photo', models.ImageField(blank=True, default='default/user.jpg', null=True, upload_to=api.models.user_directory_path, verbose_name='头像')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('job_id', models.IntegerField(blank=True, null=True)),
                ('jobid', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('educationcode', models.IntegerField(blank=True, null=True)),
                ('education', models.CharField(blank=True, max_length=255, null=True)),
                ('industrycompanytags', models.CharField(blank=True, max_length=255, null=True)),
                ('industryname', models.CharField(blank=True, max_length=255, null=True)),
                ('jobsummary', models.TextField(blank=True, null=True)),
                ('positionurl', models.CharField(blank=True, max_length=255, null=True)),
                ('positionsourcetypeurl', models.CharField(blank=True, max_length=255, null=True)),
                ('property', models.CharField(blank=True, max_length=255, null=True)),
                ('propertycode', models.CharField(blank=True, max_length=255, null=True)),
                ('recruitnumber', models.CharField(blank=True, max_length=255, null=True)),
                ('salary60', models.CharField(blank=True, max_length=255, null=True)),
                ('salaryreal', models.CharField(blank=True, max_length=255, null=True)),
                ('salary_min', models.IntegerField(blank=True, null=True)),
                ('salary_max', models.IntegerField(blank=True, null=True)),
                ('salarytype', models.CharField(blank=True, max_length=255, null=True)),
                ('salarycounte', models.CharField(blank=True, max_length=255, null=True)),
                ('skilllabel', models.CharField(blank=True, max_length=255, null=True)),
                ('publishtime', models.DateTimeField(blank=True, null=True)),
                ('cityid', models.TextField(blank=True, null=True)),
                ('citydistrict', models.CharField(blank=True, max_length=255, null=True)),
                ('streetid', models.TextField(blank=True, null=True)),
                ('streetname', models.CharField(blank=True, max_length=255, null=True)),
                ('subjobtypelevel', models.TextField(blank=True, null=True)),
                ('subjobtypelevelname', models.CharField(blank=True, max_length=255, null=True)),
                ('welfaretaglist', models.TextField(blank=True, null=True)),
                ('workcity', models.TextField(blank=True, null=True)),
                ('worktypecode', models.TextField(blank=True, null=True)),
                ('worktype', models.CharField(blank=True, max_length=255, null=True)),
                ('workingexpcode', models.TextField(blank=True, null=True)),
                ('workingexp', models.CharField(blank=True, max_length=255, null=True)),
                ('companyid', models.CharField(blank=True, max_length=255, null=True)),
                ('companynumber', models.CharField(blank=True, max_length=255, null=True)),
                ('companyscaletypetagsnew', models.CharField(blank=True, max_length=255, null=True)),
                ('companyname', models.CharField(blank=True, max_length=255, null=True)),
                ('rootcompanynumber', models.CharField(blank=True, max_length=255, null=True)),
                ('companylogo', models.TextField(blank=True, null=True)),
                ('companysize', models.CharField(blank=True, max_length=255, null=True)),
                ('companyurl', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '职位列表',
                'db_table': 'jobs',
            },
        ),
        migrations.CreateModel(
            name='UserResume',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('eduHighestLevel', models.IntegerField(blank=True, default=0, null=True, verbose_name='教育水平编码')),
                ('eduHighestLevelTranslation', models.CharField(blank=True, max_length=10, null=True, verbose_name='教育水平')),
                ('workingexpCode', models.IntegerField(blank=True, default=0, null=True, verbose_name='工作经验id')),
                ('workingexp', models.CharField(blank=True, default='无经验', max_length=20, verbose_name='工作经验')),
                ('worktypeCode', models.IntegerField(blank=True, default=0, null=True, verbose_name='期望工作类型id')),
                ('worktype', models.CharField(blank=True, default='无经验', max_length=20, null=True, verbose_name='期望工作类型')),
                ('workcity', models.IntegerField(blank=True, default=0, null=True, verbose_name='期望工作城市id')),
                ('workcityTranslation', models.CharField(blank=True, max_length=20, null=True, verbose_name='期望工作城市')),
                ('workcity2', models.IntegerField(blank=True, default=0, null=True, verbose_name='期望工作城市2id')),
                ('workcity2Translation', models.CharField(blank=True, max_length=20, null=True, verbose_name='期望工作城市2')),
                ('workcity3', models.IntegerField(blank=True, default=0, null=True, verbose_name='期望工作城市3id')),
                ('workcity3Translation', models.CharField(blank=True, max_length=20, null=True, verbose_name='期望工作城市3')),
                ('subjobtypelevel', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='期望工作类型编码')),
                ('subjobtypelevelname', models.CharField(blank=True, default=0, max_length=20, null=True, verbose_name='期望工作类型')),
                ('skilllabel', models.CharField(blank=True, max_length=255, null=True, verbose_name='技能标签（/隔开）')),
                ('propertycode', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='期望企业类型编码')),
                ('property', models.CharField(blank=True, max_length=20, null=True, verbose_name='期望企业类型')),
                ('preferredSalaryMin', models.IntegerField(blank=True, default=0, null=True, verbose_name='期望最低工资')),
                ('preferredSalaryMax', models.IntegerField(blank=True, default=0, null=True, verbose_name='期望最高工资')),
                ('SelfEvaluate', models.TextField(blank=True, max_length=20, null=True, verbose_name='自我介绍')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户简历信息',
                'verbose_name_plural': '用户简历信息',
                'db_table': 'resume',
            },
        ),
        migrations.CreateModel(
            name='StarJobs',
            fields=[
                ('sid', models.BigAutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.jobs', verbose_name='岗位')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '职位收藏列表',
                'db_table': 'starjobs',
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('lid', models.BigAutoField(primary_key=True, serialize=False)),
                ('active', models.TextField(verbose_name='行为')),
                ('content', models.TextField(verbose_name='内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '操作日志',
                'verbose_name_plural': '操作日志',
                'db_table': 'logs',
            },
        ),
        migrations.CreateModel(
            name='ClickJobs',
            fields=[
                ('cid', models.BigAutoField(primary_key=True, serialize=False)),
                ('count', models.IntegerField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.jobs', verbose_name='岗位')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '职位浏览列表',
                'db_table': 'clickjobs',
            },
        ),
    ]
